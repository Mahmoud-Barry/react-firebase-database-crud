{"ast":null,"code":"import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\nimport Tutorial from \"./tutorial.component\";\nexport default class TutorialsList extends Component {\n  constructor(props) {\n    super(props);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\n    this.removeAllTutorials = this.removeAllTutorials.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n    this.state = {\n      tutorials: [],\n      currentTutorial: null,\n      currentIndex: -1\n    };\n  }\n\n  componentDidMount() {\n    TutorialDataService.getAll().on(\"value\", this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    TutorialDataService.getAll().off(\"value\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    let tutorials = [];\n    items.forEach(item => {\n      let key = item.key;\n      let data = item.val();\n      tutorials.push({\n        key: key,\n        title: data.title,\n        description: data.description,\n        published: data.published\n      });\n    });\n    this.setState({\n      tutorials: tutorials\n    });\n  }\n\n  refreshList() {\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1\n    });\n  }\n\n  setActiveTutorial(tutorial, index) {\n    this.setState({\n      currentTutorial: tutorial,\n      currentIndex: index\n    });\n  }\n\n  removeAllTutorials() {\n    TutorialDataService.deleteAll().then(() => {\n      this.refreshList();\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    const {\n      tutorials,\n      currentTutorial,\n      currentIndex\n    } = this.state;\n    return sdkfjsdfk;\n  }\n\n}","map":{"version":3,"sources":["/home/docteurjs/Bureau/Bakeli/react-firebase-database-crud/src/components/tutorials-list.component.js"],"names":["React","Component","TutorialDataService","Tutorial","TutorialsList","constructor","props","refreshList","bind","setActiveTutorial","removeAllTutorials","onDataChange","state","tutorials","currentTutorial","currentIndex","componentDidMount","getAll","on","componentWillUnmount","off","items","forEach","item","key","data","val","push","title","description","published","setState","tutorial","index","deleteAll","then","catch","e","console","log","render","sdkfjsdfk"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,eAAe,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AACnDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKE,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBF,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AAEA,SAAKI,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,eAAe,EAAE,IAFN;AAGXC,MAAAA,YAAY,EAAE,CAAC;AAHJ,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBd,IAAAA,mBAAmB,CAACe,MAApB,GAA6BC,EAA7B,CAAgC,OAAhC,EAAyC,KAAKP,YAA9C;AACD;;AAEDQ,EAAAA,oBAAoB,GAAG;AACrBjB,IAAAA,mBAAmB,CAACe,MAApB,GAA6BG,GAA7B,CAAiC,OAAjC,EAA0C,KAAKT,YAA/C;AACD;;AAEDA,EAAAA,YAAY,CAACU,KAAD,EAAQ;AAClB,QAAIR,SAAS,GAAG,EAAhB;AAEAQ,IAAAA,KAAK,CAACC,OAAN,CAAeC,IAAD,IAAU;AACtB,UAAIC,GAAG,GAAGD,IAAI,CAACC,GAAf;AACA,UAAIC,IAAI,GAAGF,IAAI,CAACG,GAAL,EAAX;AACAb,MAAAA,SAAS,CAACc,IAAV,CAAe;AACbH,QAAAA,GAAG,EAAEA,GADQ;AAEbI,QAAAA,KAAK,EAAEH,IAAI,CAACG,KAFC;AAGbC,QAAAA,WAAW,EAAEJ,IAAI,CAACI,WAHL;AAIbC,QAAAA,SAAS,EAAEL,IAAI,CAACK;AAJH,OAAf;AAMD,KATD;AAWA,SAAKC,QAAL,CAAc;AACZlB,MAAAA,SAAS,EAAEA;AADC,KAAd;AAGD;;AAEDN,EAAAA,WAAW,GAAG;AACZ,SAAKwB,QAAL,CAAc;AACZjB,MAAAA,eAAe,EAAE,IADL;AAEZC,MAAAA,YAAY,EAAE,CAAC;AAFH,KAAd;AAID;;AAEDN,EAAAA,iBAAiB,CAACuB,QAAD,EAAWC,KAAX,EAAkB;AACjC,SAAKF,QAAL,CAAc;AACZjB,MAAAA,eAAe,EAAEkB,QADL;AAEZjB,MAAAA,YAAY,EAAEkB;AAFF,KAAd;AAID;;AAEDvB,EAAAA,kBAAkB,GAAG;AACnBR,IAAAA,mBAAmB,CAACgC,SAApB,GACGC,IADH,CACQ,MAAM;AACV,WAAK5B,WAAL;AACD,KAHH,EAIG6B,KAJH,CAIUC,CAAD,IAAO;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,KANH;AAOD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE3B,MAAAA,SAAF;AAAaC,MAAAA,eAAb;AAA8BC,MAAAA;AAA9B,QAA+C,KAAKH,KAA1D;AAEA,WACE6B,SADF;AAGD;;AAxEkD","sourcesContent":["import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nimport Tutorial from \"./tutorial.component\";\n\nexport default class TutorialsList extends Component {\n  constructor(props) {\n    super(props);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\n    this.removeAllTutorials = this.removeAllTutorials.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n\n    this.state = {\n      tutorials: [],\n      currentTutorial: null,\n      currentIndex: -1,\n    };\n  }\n\n  componentDidMount() {\n    TutorialDataService.getAll().on(\"value\", this.onDataChange);\n  }\n\n  componentWillUnmount() {\n    TutorialDataService.getAll().off(\"value\", this.onDataChange);\n  }\n\n  onDataChange(items) {\n    let tutorials = [];\n\n    items.forEach((item) => {\n      let key = item.key;\n      let data = item.val();\n      tutorials.push({\n        key: key,\n        title: data.title,\n        description: data.description,\n        published: data.published,\n      });\n    });\n\n    this.setState({\n      tutorials: tutorials,\n    });\n  }\n\n  refreshList() {\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1,\n    });\n  }\n\n  setActiveTutorial(tutorial, index) {\n    this.setState({\n      currentTutorial: tutorial,\n      currentIndex: index,\n    });\n  }\n\n  removeAllTutorials() {\n    TutorialDataService.deleteAll()\n      .then(() => {\n        this.refreshList();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { tutorials, currentTutorial, currentIndex } = this.state;\n\n    return (\n      sdkfjsdfk\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}